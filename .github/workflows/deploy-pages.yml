name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build React frontend
        run: |
          cd frontend
          CI=false npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare deployment directory
        run: |
          # Create deployment directory
          mkdir -p _site
          
          # Copy documentation as the main site
          cp -r docs/* _site/
          
          # Copy standalone app to a subdirectory
          mkdir -p _site/app
          cp -r standalone/* _site/app/
          
          # Copy React build to another subdirectory (optional)
          mkdir -p _site/react
          cp -r frontend/build/* _site/react/
          
          # Create .nojekyll to prevent Jekyll processing
          touch _site/.nojekyll
          
          # Create a redirect for the root to go to docs
          echo '<!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Redirecting to Mini 4WD Converter</title>
            <meta http-equiv="refresh" content="0; URL=./index.html">
          </head>
          <body>
            <p>If you are not redirected automatically, <a href="./index.html">click here</a>.</p>
          </body>
          </html>' > _site/redirect.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4